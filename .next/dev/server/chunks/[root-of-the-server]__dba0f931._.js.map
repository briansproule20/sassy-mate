{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/briansproule/Coding%20Projects/sassy-mate/app/api/teams/lakers/upcoming/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\n\nexport const revalidate = 300; // Cache for 5 minutes\n\nexport async function GET() {\n  try {\n    // Fetch Lakers schedule from ESPN API\n    const scheduleRes = await fetch(\n      \"https://site.api.espn.com/apis/site/v2/sports/basketball/nba/teams/lal/schedule\"\n    );\n\n    if (!scheduleRes.ok) {\n      throw new Error(\"Failed to fetch Lakers schedule\");\n    }\n\n    const scheduleData = await scheduleRes.json();\n    const events = scheduleData.events || [];\n\n    // Find the next upcoming game\n    const now = new Date();\n    const upcomingGame = events.find((event: any) => {\n      const gameDate = new Date(event.date);\n      return gameDate > now && event.competitions?.[0];\n    });\n\n    if (!upcomingGame) {\n      return NextResponse.json({\n        success: true,\n        data: {\n          nextGame: null,\n          lebronStatus: \"No upcoming games scheduled\",\n        },\n      });\n    }\n\n    const competition = upcomingGame.competitions[0];\n    const competitors = competition.competitors || [];\n    \n    // Find Lakers and opponent\n    const lakersTeam = competitors.find((c: any) => c.team?.abbreviation === \"LAL\");\n    const opponentTeam = competitors.find((c: any) => c.team?.abbreviation !== \"LAL\");\n    \n    const nextGame = {\n      id: upcomingGame.id,\n      date: upcomingGame.date,\n      datetime: upcomingGame.date,\n      opponent: opponentTeam?.team?.displayName || \"TBD\",\n      opponent_abbr: opponentTeam?.team?.abbreviation || \"TBD\",\n      is_home: lakersTeam?.homeAway === \"home\",\n      status: competition.status?.type?.shortDetail || \"Scheduled\",\n    };\n\n    // LeBron status - try to get from injuries data\n    // For now, set manually based on latest reports\n    // TODO: Parse ESPN injury reports when available\n    const lebronStatus = \"OUT (Sciatica) - Expected back mid-November\";\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        nextGame,\n        lebronStatus,\n      },\n    });\n  } catch (error) {\n    console.error(\"Failed to fetch Lakers schedule:\", error);\n    \n    // Fallback to hardcoded data\n    return NextResponse.json({\n      success: true,\n      data: {\n        nextGame: {\n          id: 1,\n          date: \"2024-10-25\",\n          datetime: \"2024-10-25T19:00:00-07:00\",\n          opponent: \"Phoenix Suns\",\n          opponent_abbr: \"PHX\",\n          is_home: true,\n          status: \"Scheduled\",\n        },\n        lebronStatus: \"OUT (Sciatica) - Expected back mid-November\",\n      },\n    });\n  }\n}\n\n"],"names":[],"mappings":";;;;;;AAAA;;AAEO,MAAM,aAAa,KAAK,sBAAsB;AAE9C,eAAe;IACpB,IAAI;QACF,sCAAsC;QACtC,MAAM,cAAc,MAAM,MACxB;QAGF,IAAI,CAAC,YAAY,EAAE,EAAE;YACnB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,eAAe,MAAM,YAAY,IAAI;QAC3C,MAAM,SAAS,aAAa,MAAM,IAAI,EAAE;QAExC,8BAA8B;QAC9B,MAAM,MAAM,IAAI;QAChB,MAAM,eAAe,OAAO,IAAI,CAAC,CAAC;YAChC,MAAM,WAAW,IAAI,KAAK,MAAM,IAAI;YACpC,OAAO,WAAW,OAAO,MAAM,YAAY,EAAE,CAAC,EAAE;QAClD;QAEA,IAAI,CAAC,cAAc;YACjB,OAAO,iKAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,MAAM;oBACJ,UAAU;oBACV,cAAc;gBAChB;YACF;QACF;QAEA,MAAM,cAAc,aAAa,YAAY,CAAC,EAAE;QAChD,MAAM,cAAc,YAAY,WAAW,IAAI,EAAE;QAEjD,2BAA2B;QAC3B,MAAM,aAAa,YAAY,IAAI,CAAC,CAAC,IAAW,EAAE,IAAI,EAAE,iBAAiB;QACzE,MAAM,eAAe,YAAY,IAAI,CAAC,CAAC,IAAW,EAAE,IAAI,EAAE,iBAAiB;QAE3E,MAAM,WAAW;YACf,IAAI,aAAa,EAAE;YACnB,MAAM,aAAa,IAAI;YACvB,UAAU,aAAa,IAAI;YAC3B,UAAU,cAAc,MAAM,eAAe;YAC7C,eAAe,cAAc,MAAM,gBAAgB;YACnD,SAAS,YAAY,aAAa;YAClC,QAAQ,YAAY,MAAM,EAAE,MAAM,eAAe;QACnD;QAEA,gDAAgD;QAChD,gDAAgD;QAChD,iDAAiD;QACjD,MAAM,eAAe;QAErB,OAAO,iKAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;gBACJ;gBACA;YACF;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAElD,6BAA6B;QAC7B,OAAO,iKAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;gBACJ,UAAU;oBACR,IAAI;oBACJ,MAAM;oBACN,UAAU;oBACV,UAAU;oBACV,eAAe;oBACf,SAAS;oBACT,QAAQ;gBACV;gBACA,cAAc;YAChB;QACF;IACF;AACF","debugId":null}}]
}